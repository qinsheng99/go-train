// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package api

import (
	"github.com/qinsheng99/go-train/api/handel/ceshi"
	"github.com/qinsheng99/go-train/api/handel/demo"
	"github.com/qinsheng99/go-train/api/handel/es"
	"github.com/qinsheng99/go-train/api/handel/mongo"
	"github.com/qinsheng99/go-train/api/handel/mysql"
	"github.com/qinsheng99/go-train/api/handel/postgresql"
	"github.com/qinsheng99/go-train/api/handel/redis"
	"github.com/qinsheng99/go-train/api/handel/sort"
	"github.com/qinsheng99/go-train/internal/dao/persistence"
	"github.com/qinsheng99/go-train/internal/dao/persistence/boy"
	"github.com/qinsheng99/go-train/internal/dao/persistence/customer"
	ceshi2 "github.com/qinsheng99/go-train/internal/service/ceshi"
	"github.com/qinsheng99/go-train/internal/service/drainage"
	"github.com/qinsheng99/go-train/internal/service/mysql"
	"github.com/qinsheng99/go-train/internal/service/postgresql"
	"github.com/qinsheng99/go-train/library/db"
	"github.com/qinsheng99/go-train/library/elasticsearch"
	"github.com/qinsheng99/go-train/library/mongo"
	"github.com/qinsheng99/go-train/library/redisClient"
)

// Injectors from wire.go:

func Init(bundleDb *db.BundleDb, es *elasticsearch.ES, r *redisClient.Redis, mo *mongoClient.Mongo) (*Entry, error) {
	esImp := persistence.NewEsDao(es)
	customerImp := customer.NewCustomerDao(bundleDb, esImp)
	drainageDrainage := drainage.NewDS(customerImp)
	handler := ceshi.NewHandler(customerImp, esImp, drainageDrainage)
	ceShiService := ceshi2.NewCeshi()
	redisInterface := redisClient.NewRedisStruct(r)
	handle := redis.NewH(ceShiService, redisInterface)
	ceshiMysqlImp := ServiceMysql.NewMysqlService(bundleDb)
	mysqlHandler := mysql.NewMysql(ceshiMysqlImp)
	boyimpl := boy.NewPostgresBoy()
	boyimplService := servicePostgresql.NewPostgresqlService(boyimpl)
	postgresqlHandler := postgresql.NewPostgreSql(boyimplService)
	sortHandlerSortHandler := sortHandler.NewSort()
	esHandleEsHandle := esHandle.NewEsHandle(esImp, ceshiMysqlImp)
	mongos := mongoClient.NewMongoStruct(mo)
	mongoHandle := mongo.NewMgo(mongos, redisInterface)
	demoHandle := demo.NewDemo(redisInterface)
	entry := &Entry{
		NewHandler:    handler,
		NewH:          handle,
		NewMysql:      mysqlHandler,
		NewPostgreSql: postgresqlHandler,
		NewSort:       sortHandlerSortHandler,
		NewEs:         esHandleEsHandle,
		NewMgo:        mongoHandle,
		NewDemo:       demoHandle,
	}
	return entry, nil
}
